<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SCTP | The Chumo Mind]]></title>
  <link href="http://chulochumo.github.com/blog/categories/sctp/atom.xml" rel="self"/>
  <link href="http://chulochumo.github.com/"/>
  <updated>2013-03-25T03:34:13-05:00</updated>
  <id>http://chulochumo.github.com/</id>
  <author>
    <name><![CDATA[Ed Gonzalez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Stream Control Transmission Protocol (SCTP): An Overview]]></title>
    <link href="http://chulochumo.github.com/blog/2013/03/20/stream-control-transmission-protocol-sctp-an-overview/"/>
    <updated>2013-03-20T06:24:00-05:00</updated>
    <id>http://chulochumo.github.com/blog/2013/03/20/stream-control-transmission-protocol-sctp-an-overview</id>
    <content type="html"><![CDATA[<p>This is the first of several planned posts on SCTP that outline the
protocol and some of the research I've been doing. This protocol
doesn't get <em>too</em> much attention outside of the Telecom industry so
hopefully it will be an interesting read. I assume readers have some
previous exposure to networks and protocols but I will try to explain
some concepts on the fly.</p>

<p>These are some good refresher Wikipedia articles just in case.</p>

<p style="text-align:center;"><a href="http://en.wikipedia.org/wiki/OSI_model">http://en.wikipedia.org/wiki/OSI_model</a> <br /> <a href="http://en.wikipedia.org/wiki/Transport_layer">http://en.wikipedia.org/wiki/Transport_layer</a></p>

<p>SCTP is a relatively young transport protocol which grew out of
several projects/research that were trying to replace traditional
telephone signaling methods with packet based protocols. TCP was found
to have some reliability and timing weaknesses that were unnacceptable
to the industry. It became an IETF Proposed Standard in 2000 and was published as
RFC 2960 which was later replaced by RFC 4960 in 2007.</p>

<p>To me, SCTP is like a younger sibling of TCP and UDP. It retains some
of the fast and loose attitude of UDP but still takes care of it's
responsibilities like TCP. It is a reliable, message oriented
transport protocol that bridges and adds to a lot of the features
found in UDP and TCP.</p>

<!-- more -->


<h3>Like TCP, SCTP...</h3>

<ul>
<li>is <strong>Connection Oriented</strong> - This means that a connection is
established at both endpoints prior to sending any data. This is
unlike UDP where the sender starts sending data towards an IP address
with no prior knowledge of the connection.</li>
<li>provides <strong>Reliable Transfer</strong> - Data given to the protocol is
assured to reach it's destination as long as there is a connection.
The protocol handles lost packets, congestion, etc.</li>
<li>provides <strong>Ordered Data Delivery</strong> - Pretty self explanatory.</li>
<li>provides <strong>Flow and Congestion Control</strong> - The protocol is "smart"
in the way it sends data so that unfavorable circumstances do not
arise such as over congesting the network or overloading the
receiver's resources.</li>
<li>provides <strong>Path MTU Discovery</strong> - MTU is the Maximum Transmission
Unit which is the maximum packet size that a network can handle
without fragmenting packets.</li>
</ul>


<h3>Like UDP, SCTP...</h3>

<ul>
<li>is <strong>Message Oriented</strong> - Unlike TCP that treats all data as a
formatless stream of bytes, SCTP and UDP preserve message boundaries
given to it from the higher layers.</li>
<li>provides <strong>Unordered Data Delivery</strong> - Although this seems
contradictory to a previous statement it is true. SCTP
supports both!</li>
</ul>


<h3>Unlike TCP and UDP, SCTP...</h3>

<ul>
<li>provides <strong>Message Bundling</strong> - Small messages are automatically
bundled together in the same packet if they fit. TCP does this at
the Byte level with no awareness of the actual message boundaries.</li>
<li>provides <strong>Multi-Stream Support</strong> - Within a single connection (in
SCTP terms <em>single association</em>) there can exist many independent
streams. They may be used for concurrent transfer or for independent
data transfer.</li>
<li>provides <strong>Multi-Homed Hosts Support</strong> - A single association can
support multiple IP's. These may exist on a single network interface
card or on multiple network interface cards with each assigned an IP
address.</li>
<li>provides <strong>Builtin Reachability Check</strong> - Similar to TCP's
"keep-alive" mechanism, SCTP's heartbeat periodically checks to see
whether a path/connection is still reachable. The main goal is to
aid in a failover situation in contrast to TCP's long-term state
cleanup goal.</li>
<li>provides <strong>State Cookie Mechanism</strong> - This security cookie is used to
prevent SYN flood attacks where phony connections are requested in
order to use up server resources.</li>
</ul>


<p>I hope these features have your interest peaked with this nifty
transport protocol as I will continue posting about it. :P</p>

<h3>References</h3>

<ol>
<li><span id="stewart_book">R.R. Stewart and Q. Xie, <i>Stream Control Transmission Protocol (SCTP) A Reference Guide</i>. Addison Wesley, 2002. </span></li>
<li><span id="rfc_2960">R. Stewart, Q. Xie, K. Morneault, C. Sharp, H. Schwarzbauer, T. Taylor, I. Rytina, M. Kalla, L. Zhang and V. Paxson, “Stream Control Transmission Protocol, RFC2960”, <i>RFC 2960</i>. Oct-2000 [Online]. Available: http://www.ietf.org/rfc/rfc2960.txt</span></li>
<li><span id="rfc_4960">R. Stewart, “Stream Control Transmission Protocol, RFC4960”. Sep-2007 [Online]. Available: http://www.ietf.org/rfc/rfc4960.txt</span></li>
</ol>

]]></content>
  </entry>
  
</feed>
